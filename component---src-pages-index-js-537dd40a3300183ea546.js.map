{"version":3,"sources":["webpack:///./src/components/sidebar/Bio.js","webpack:///./src/components/sidebar/SocialLinks.js","webpack:///./src/components/sidebar/Sidebar.js","webpack:///./src/pages/index.js","webpack:///./src/components/tags/TechTag.js"],"names":["Bio","author","tagline","className","src","ahacad","style","maxWidth","alt","SocialLinks","contacts","href","linkedin","title","size","color","github","stackoverflow","twitter","Sidebar","query","render","data","site","siteMetadata","to","ArchivePage","posts","allMarkdownRemark","edges","labels","keywords","map","post","node","frontmatter","tags","key","id","fields","slug","date","excerpt","TechTag","props","tag","tech","name","fontSize","role","viewBox","xmlns","width","height","fill","d"],"mappings":"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","file":"component---src-pages-index-js-537dd40a3300183ea546.js","sourcesContent":["import React from \"react\"\nimport \"./sidebar.css\"\n\nimport ahacad from \"../../images/ahacad.jpg\"\n\nconst Bio = ({ author, tagline }) => {\n\n    return (\n        <div className=\"bio-main w-75\">\n            <img src={ahacad} style={{ maxWidth: `100px` }} className=\"profile-img\" alt=\"\" />\n            <h3 className=\"mt-2 author-bio\">{author}</h3>\n            <small className=\"text-muted\">{tagline}</small>\n        </div>\n    )\n}\n\nexport default Bio\n","import React from \"react\"\nimport {\n    FaLinkedin,\n    FaGithubSquare,\n    FaStackOverflow,\n    FaTwitterSquare\n} from \"react-icons/fa\"\nimport \"./sidebar.css\"\n\n\nconst SocialLinks = ({ contacts }) => {\n    return (\n        <div className=\"side-social-links float-left mt-3 mb-3\">\n            <a className=\"text-secondary p-2\"\n                href={contacts.linkedin}>\n                <span title=\"Linked In\">\n                    <FaLinkedin size={26} style={{ color: \"secondary\" }} />\n                </span>\n            </a>\n            <a className=\"text-secondary p-2\"\n                href={contacts.github}>\n                <span title=\"GitHub\">\n                    <FaGithubSquare size={26} style={{ color: \"secondary\" }} />\n                </span>\n            </a>\n            <a className=\"text-secondary p-2\"\n                href={contacts.stackoverflow}>\n                <span title=\"Stack Overflow\">\n                    <FaStackOverflow size={26} style={{ color: \"secondary\" }} />\n                </span>\n            </a>\n            <a className=\"text-secondary p-2\"\n                href={contacts.twitter}>\n                <span title=\"Twitter\">\n                    <FaTwitterSquare size={26} style={{ color: \"secondary\" }} />\n                </span>\n            </a>\n        </div>\n    )\n}\n\nexport default SocialLinks\n","import React from \"react\"\nimport { StaticQuery, graphql, Link } from \"gatsby\"\nimport Bio from \"./Bio\"\nimport \"./sidebar.css\"\n\nimport SocialLinks from \"./SocialLinks\"\nimport TechTags from \"./TechTags\"\n\n\nconst Sidebar = () => {\n    return (\n        <StaticQuery\n            query={graphql`\n                query SiteBioQuery {\n                    site {\n                        siteMetadata {\n                            title\n                            tagline\n                            author\n                            contacts {\n                                linkedin\n                                github\n                                stackoverflow\n                                freecodecamp\n                                twitter\n                            }\n                            labels {\n                                tag\n                                tech\n                                name \n                                size \n                                color\n                            }\n                        }\n                    }\n                    allMarkdownRemark(\n                        limit: 10\n                        sort: { fields: [frontmatter___date], order: DESC }\n                        filter: { frontmatter: { published: { eq: true } } }\n                    ) {\n                        edges {\n                            node {\n                                frontmatter {\n                                    tags\n                                }\n                            }\n                        }\n                    }\n                }\n            `}\n            render={data => (\n                <>\n                    <div className=\"sidebar-main border-right\">\n                        <Bio author={data.site.siteMetadata.author} tagline={data.site.siteMetadata.tagline} />\n                        <SocialLinks contacts={data.site.siteMetadata.contacts} />\n                        <div className=\"page-links\">\n                            <Link to=\"/\"><span className=\"text-dark d-block py-1\">Blog Home</span></Link>\n                            <Link to=\"/about\"><span className=\"text-dark d-block py-1\">About</span></Link>\n                            <Link to=\"/books\"><span className=\"text-dark d-block py-1\">Books</span></Link>\n                        </div>\n                        {/* <div className=\"tech-tags mt-4\">\n                            <TechTags labels={data.site.siteMetadata.labels} posts={data.allMarkdownRemark.edges} />\n                        </div> */}\n                    </div>\n                </>\n            )}\n        />\n    )\n}\n\nexport default Sidebar\n","import React from \"react\"\nimport { Link, graphql } from \"gatsby\"\nimport \"bootstrap/dist/css/bootstrap.css\"\nimport \"./index.css\"\n\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\nimport Sidebar from \"../components/sidebar/Sidebar\"\n\nconst ArchivePage = ({ data }) => {\n    const posts = data.allMarkdownRemark.edges\n    const labels = data.site.siteMetadata.labels\n\n    {/*\n    const getTechTags = (tags) => {\n        const techTags = []\n        tags.forEach((tag, i) => {\n            labels.forEach((label) => {\n                if (tag === label.tag) {\n                    techTags.push(<TechTag key={i} tag={label.tag} tech={label.tech} name={label.name} size={label.size} color={label.color} />)\n                }\n            })\n        })\n        return techTags\n    }\n    */}\n    \n\n    return (\n        <Layout>\n            <SEO title=\"Archive\" keywords={[`gatsby`, `javascript`, `react`, `web development`, `blog`, `graphql`]} />\n            <div className=\"index-main\">\n                <div className=\"sidebar px-5 py-2\">\n                    <Sidebar />\n                </div>\n                <div className=\"post-list-main\">\n                    {posts.map((post) => {\n                        const tags = post.node.frontmatter.tags\n                        return (\n                            <div key={post.node.id} className=\"container mt-5\">\n                                <Link\n                                    to={post.node.fields.slug}\n                                    className=\"text-dark\"\n                                >\n                                    <h2 className=\"title\">{post.node.frontmatter.title}</h2>\n                                </Link>\n                                <small className=\"d-block text-info\"><i>Posted on {post.node.frontmatter.date}</i>\n                                </small>\n                                <p className=\"mt-3 d-inline\">{post.node.excerpt}</p>\n                                <Link\n                                    to={post.node.fields.slug}\n                                    className=\"text-primary\"\n                                >\n                                    <small className=\"d-inline-block ml-3\"> Read full post</small>\n                                </Link>\n                                <div className=\"d-block\">\n                                  {/*getTechTags(tags)*/}\n                                </div>\n                            </div>\n                        )\n                    })}\n                </div>\n            </div>\n        </Layout>\n    )\n}\n\nexport const pageQuery = graphql`\n         query ArchiveQuery {\n           site {\n             siteMetadata {\n               title \n               author\n               labels {\n                 tag\n                 tech \n                 name \n                 size \n                 color\n               } \n             }\n           }\n           allMarkdownRemark(\n             limit: 1000\n             sort: { fields: [frontmatter___date], order: DESC }\n             filter: { frontmatter: { published: { eq: true } } }\n           ) {\n             totalCount\n             edges {\n               node {\n                 excerpt(pruneLength: 200)\n                 html\n                 id\n                 frontmatter {\n                   title\n                   date(formatString: \"MMMM DD, YYYY\")\n                   tags\n                 }\n                 fields {\n                   slug\n                 }\n               }\n             }\n           }\n         }\n       `\n\nexport default ArchivePage\n\n","import React from \"react\"\n\nimport \"./tags.css\"\nimport { Link } from \"gatsby\";\n\nconst TechTag = (props) => {\n    const { tag, tech, name, size, color } = props\n\n    return (\n        <div className=\"d-inline-block p-1\">\n            <Link to={`/tags/${tag}/`}>\n                <button\n                    className=\"tech-tag text-white\">\n                    <p className=\"d-inline\">{tech} </p>\n                    <div className=\"d-inline\" style={{ fontSize: size, color: color }}><svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\" width={size} height={size} style={{fill: `${color}`}}>\n                            <title>{tech}</title>\n                            <path\n                                d={name} />\n                        </svg></div>\n                </button>\n            </Link>\n\n        </div>\n\n    )\n}\n\nexport default TechTag"],"sourceRoot":""}