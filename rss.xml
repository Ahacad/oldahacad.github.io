<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title><![CDATA[ahacad's blog]]></title><description><![CDATA[Ahacad's personal blog]]></description><link>https://ahacad.cool</link><generator>GatsbyJS</generator><lastBuildDate>Thu, 25 Mar 2021 12:24:17 GMT</lastBuildDate><item><title><![CDATA[No title]]></title><link>https://ahacad.cool/linux/vim-for-go/</link><guid isPermaLink="false">https://ahacad.cool/linux/vim-for-go/</guid><content:encoded></content:encoded></item><item><title><![CDATA[重学 Vim (WIP)]]></title><description><![CDATA[前言 用人说用 vim 装逼，我想说确实装逼，但是更重要的是，客观上来说手指不离开键盘去弄鼠标和触摸板的确就是效率更高的，每次省下的这一两秒时间通过累计效应放大最后会有相当可观的效果；现代 vim (neovim) 在 coc 和 lsp (language support…]]></description><link>https://ahacad.cool/linux/vim-relearn/</link><guid isPermaLink="false">https://ahacad.cool/linux/vim-relearn/</guid><pubDate>Thu, 25 Mar 2021 18:54:06 GMT</pubDate><content:encoded>&lt;h3&gt;前言&lt;/h3&gt;
&lt;p&gt;用人说用 vim 装逼，我想说确实装逼，但是更重要的是，客观上来说手指不离开键盘去弄鼠标和触摸板的确就是效率更高的，每次省下的这一两秒时间通过累计效应放大最后会有相当可观的效果；现代 vim (neovim) 在 coc 和 lsp (language support protocol) 的帮助下完全可以胜任日常开发，vim 对各种语言实现插件的支持(vimscript, TypeScript, python, rust, etc.) 也意味着被很多人吹捧的 VSCode 插件可以通过一些转化被 neovim 完全吸收使用，我不否认有一些事情是现代 GUI 才能做到的，但是考虑到VSCode 跑起来的 cpu 和 RAM 消耗以及带来的微小收益，我仍然会使用 neovim 作为自己的主力编辑器。&lt;/p&gt;
&lt;p&gt;但是！在用了 vim -&gt; neovim 约莫两年后，配了几十个插件后，我还是发现自己竟然平时只使用一些及其常见的操作(&quot;w&quot;, &quot;q&quot;, &quot;a&quot;, &quot;i&quot;, etc. 差不多就是入门时候学得)，完全没有发挥出 vim 的能力。特此重新学习，释放 vim (neovim) 的威力。&lt;/p&gt;
&lt;hr&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;vim&quot;&gt;&lt;pre class=&quot;language-vim&quot;&gt;&lt;code class=&quot;language-vim&quot;&gt;zz&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; 将光标所在行拉到屏幕中央，以显示上下文
zt&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; 将光标所在行拉到屏幕最上方
zb&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; 将光标所在行拉到屏幕下方&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;References&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://neovim.io/doc/user/&quot;&gt;neovim.io user manual&lt;/a&gt;: 你也可以在 Unix 系统的 &lt;code class=&quot;language-text&quot;&gt;/usr/share/nvim/runtime/doc&lt;/code&gt; 找到所有的文档&lt;/li&gt;
&lt;li&gt;&lt;/li&gt;
&lt;/ul&gt;</content:encoded></item><item><title><![CDATA[No title]]></title><description><![CDATA[如记笔记]]></description><link>https://ahacad.cool/thoughts/how-to-take-great-notes/</link><guid isPermaLink="false">https://ahacad.cool/thoughts/how-to-take-great-notes/</guid><pubDate>Tue, 23 Mar 2021 15:33:03 GMT</pubDate><content:encoded>&lt;p&gt;如记笔记&lt;/p&gt;</content:encoded></item><item><title><![CDATA[Draw automaton with tikz]]></title><link>https://ahacad.cool/Latex/Tikz-automata/</link><guid isPermaLink="false">https://ahacad.cool/Latex/Tikz-automata/</guid><pubDate>Tue, 23 Mar 2021 12:14:06 GMT</pubDate><content:encoded></content:encoded></item><item><title><![CDATA[My 20]]></title><description><![CDATA[终于 20 岁了，好好写点纪念一下。到现在都还记得 10 岁过生日时候的样子，挤在一个小房间里，一群小伙伴，外公也从老家过来了。20 岁，没有人，但是想象自己 10 年走过了很多很多，在 20 岁的正前也终于做了些事，一些改变一生的事。]]></description><link>https://ahacad.cool/thoughts/my-20/</link><guid isPermaLink="false">https://ahacad.cool/thoughts/my-20/</guid><pubDate>Mon, 22 Mar 2021 13:41:39 GMT</pubDate><content:encoded>&lt;p&gt;终于 20 岁了，好好写点纪念一下。到现在都还记得 10 岁过生日时候的样子，挤在一个小房间里，一群小伙伴，外公也从老家过来了。20 岁，没有人，但是想象自己 10 年走过了很多很多，在 20 岁的正前也终于做了些事，一些改变一生的事。&lt;/p&gt;</content:encoded></item><item><title><![CDATA[No title]]></title><description><![CDATA[读入 直接使用 Scanf 因为缺少缓存的原因会有很严重的效率问题，我一开始用 Golang 写 OJ 的时候没有意识到，结果连 50 个 tests 的点都跑不过。。参考这篇帖子 注意 Golang 的  会把 newline 当成 0，所以你需要手动加上]]></description><link>https://ahacad.cool/ACM/golang-essentials/</link><guid isPermaLink="false">https://ahacad.cool/ACM/golang-essentials/</guid><pubDate>Sun, 21 Mar 2021 18:42:50 GMT</pubDate><content:encoded>&lt;h3&gt;读入&lt;/h3&gt;
&lt;p&gt;直接使用 Scanf 因为缺少缓存的原因会有很严重的效率问题，我一开始用 Golang 写 OJ 的时候没有意识到，结果连 50 个 tests 的点都跑不过。。参考这篇&lt;a href=&quot;https://www.reddit.com/r/golang/comments/b3v3ud/alternatives_to_scanf/&quot;&gt;帖子&lt;/a&gt;&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;in := bufio.NewReader(os.Stdin)
fmt.Fscanf(in, &amp;quot;%d&amp;quot;, &amp;amp;n)&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;注意 Golang 的 &lt;code class=&quot;language-text&quot;&gt;Scanf&lt;/code&gt; 会把 newline 当成 0，所以你需要手动加上 &lt;code class=&quot;language-text&quot;&gt;\n&lt;/code&gt;&lt;/p&gt;</content:encoded></item><item><title><![CDATA[No title]]></title><description><![CDATA[PDL: problem driven learning || project driven learning]]></description><link>https://ahacad.cool/thoughts/PDL/</link><guid isPermaLink="false">https://ahacad.cool/thoughts/PDL/</guid><pubDate>Sun, 21 Mar 2021 17:05:58 GMT</pubDate><content:encoded>&lt;p&gt;PDL: problem driven learning || project driven learning&lt;/p&gt;</content:encoded></item><item><title><![CDATA[常用 C++ 操作整理]]></title><description><![CDATA[整理一些常用的 C++ 使用场景。本页面会时常更新。 1. 读入 文件操作 宏与常数 常用算法模板 gcd]]></description><link>https://ahacad.cool/ACM/cpp-essentials/</link><guid isPermaLink="false">https://ahacad.cool/ACM/cpp-essentials/</guid><pubDate>Sun, 21 Mar 2021 14:41:30 GMT</pubDate><content:encoded>&lt;p&gt;整理一些常用的 C++ 使用场景。本页面会时常更新。&lt;/p&gt;
&lt;h3&gt;1. 读入&lt;/h3&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;cpp&quot;&gt;&lt;pre class=&quot;language-cpp&quot;&gt;&lt;code class=&quot;language-cpp&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;inline&lt;/span&gt; ll &lt;span class=&quot;token function&quot;&gt;read&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;char&lt;/span&gt; ch &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;getchar&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt; ll x &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; f &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;while&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;ch &lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&apos;0&apos;&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;||&lt;/span&gt; ch &lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&apos;9&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;ch &lt;span class=&quot;token operator&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&apos;-&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; f &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt; ch &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;getchar&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;while&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;0&apos;&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;&amp;lt;=&lt;/span&gt; ch &lt;span class=&quot;token operator&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; ch &lt;span class=&quot;token operator&quot;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&apos;9&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;x &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; x &lt;span class=&quot;token operator&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;10&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;+&lt;/span&gt; ch &lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&apos;0&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt; ch &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;getchar&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; x &lt;span class=&quot;token operator&quot;&gt;*&lt;/span&gt; f&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;cpp&quot;&gt;&lt;pre class=&quot;language-cpp&quot;&gt;&lt;code class=&quot;language-cpp&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;inline&lt;/span&gt; viod &lt;span class=&quot;token function&quot;&gt;write&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;ll x&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;x &lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;token function&quot;&gt;putchar&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;-&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
        x &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt;x&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;x &lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;9&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;write&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;x &lt;span class=&quot;token operator&quot;&gt;/&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;token function&quot;&gt;putchar&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;x &lt;span class=&quot;token operator&quot;&gt;%&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;10&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&apos;0&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;文件操作&lt;/h3&gt;
&lt;h3&gt;宏与常数&lt;/h3&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;cpp&quot;&gt;&lt;pre class=&quot;language-cpp&quot;&gt;&lt;code class=&quot;language-cpp&quot;&gt;&lt;span class=&quot;token macro property&quot;&gt;&lt;span class=&quot;token directive-hash&quot;&gt;#&lt;/span&gt;&lt;span class=&quot;token directive keyword&quot;&gt;define&lt;/span&gt; &lt;span class=&quot;token macro-name&quot;&gt;ll&lt;/span&gt; &lt;span class=&quot;token expression&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;long&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;long&lt;/span&gt; &lt;/span&gt;&lt;span class=&quot;token comment&quot;&gt;// 长整型&lt;/span&gt;&lt;/span&gt;

&lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;int&lt;/span&gt; INF &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;0x3f3f3f3f&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; ll INF_LL &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;9223372036854775807LL&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;常用算法模板&lt;/h3&gt;
&lt;h4&gt;gcd&lt;/h4&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;cpp&quot;&gt;&lt;pre class=&quot;language-cpp&quot;&gt;&lt;code class=&quot;language-cpp&quot;&gt;ll &lt;span class=&quot;token function&quot;&gt;gcd&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;ll a&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;ll b&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;while&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;b&lt;span class=&quot;token operator&quot;&gt;^=&lt;/span&gt;a&lt;span class=&quot;token operator&quot;&gt;^=&lt;/span&gt;b&lt;span class=&quot;token operator&quot;&gt;^=&lt;/span&gt;a&lt;span class=&quot;token operator&quot;&gt;%=&lt;/span&gt;b&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; a&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
ll &lt;span class=&quot;token function&quot;&gt;lcd&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;ll a &lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; ll b&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; a &lt;span class=&quot;token operator&quot;&gt;*&lt;/span&gt; b &lt;span class=&quot;token operator&quot;&gt;/&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;gcd&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;a&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;b&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</content:encoded></item><item><title><![CDATA[No title]]></title><description><![CDATA[整理一下日常开发中所需要的一些工具和流程  首要的就是编辑器了 编辑器 小视图 Git]]></description><link>https://ahacad.cool/linux/the-developing-process/</link><guid isPermaLink="false">https://ahacad.cool/linux/the-developing-process/</guid><pubDate>Sat, 20 Mar 2021 11:09:19 GMT</pubDate><content:encoded>&lt;p&gt;整理一下日常开发中所需要的一些工具和流程 &lt;/p&gt;
&lt;p&gt;首要的就是编辑器了&lt;/p&gt;
&lt;h3&gt;编辑器&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;小视图&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Git&lt;/h3&gt;</content:encoded></item><item><title><![CDATA[No title]]></title><description><![CDATA[e :]]></description><link>https://ahacad.cool/Math/math-constants/</link><guid isPermaLink="false">https://ahacad.cool/Math/math-constants/</guid><pubDate>Fri, 19 Mar 2021 11:38:50 GMT</pubDate><content:encoded>&lt;ul&gt;
&lt;li&gt;e :&lt;/li&gt;
&lt;/ul&gt;</content:encoded></item><item><title><![CDATA[Vim essentials]]></title><description><![CDATA[尽管用了相当长时间的 vim，平时的使用过程中用到的 keys 并不多 担心没有发挥出 vim 的真正威力 上下左右移动 切换模式: i, a, I, A, o, O]]></description><link>https://ahacad.cool/linux/vim-the-essentials/</link><guid isPermaLink="false">https://ahacad.cool/linux/vim-the-essentials/</guid><pubDate>Tue, 16 Mar 2021 11:13:41 GMT</pubDate><content:encoded>&lt;p&gt;尽管用了相当长时间的 vim，平时的使用过程中用到的 keys 并不多&lt;/p&gt;
&lt;p&gt;担心没有发挥出 vim 的真正威力&lt;/p&gt;
&lt;p&gt;上下左右移动&lt;/p&gt;
&lt;p&gt;切换模式: i, a, I, A, o, O&lt;/p&gt;</content:encoded></item><item><title><![CDATA[Linux Rices]]></title><description><![CDATA[这篇文章不是一个强操作性的文章，请留出 10 余分钟的时间慢慢品尝，同时也不需要一次性读完，尝试一点、再回来读一点。 Intro Reddit 上有一个分区叫做 r/unixporn，上面是各路牛鬼蛇神分享自己的 Linux setup，当然如果你使用的是 Ubuntu…]]></description><link>https://ahacad.cool/linux/linux-rices/</link><guid isPermaLink="false">https://ahacad.cool/linux/linux-rices/</guid><pubDate>Sun, 14 Mar 2021 20:43:32 GMT</pubDate><content:encoded>&lt;p&gt;这篇文章不是一个强操作性的文章，请留出 10 余分钟的时间慢慢品尝，同时也不需要一次性读完，尝试一点、再回来读一点。&lt;/p&gt;
&lt;h3&gt;Intro&lt;/h3&gt;
&lt;p&gt;Reddit 上有一个分区叫做 r/unixporn，上面是各路牛鬼蛇神分享自己的 Linux setup，当然如果你使用的是 Ubuntu 可能并没有遇到很多需要自己设置的地方，当你开始使用 WM (Windows Manager) 的时候，大概算是一只脚迈入了这个领域（大坑）。&lt;/p&gt;
&lt;p&gt;据说疫情宅家的时候，很多人做的第一件事情是先折腾自己的工作台，而不是开始好好工作；类似的，Linux Users 在接手一台机器之后，不是想着怎么编程，而是先要把它做的漂亮。这当然没什么错，漂亮的机器有助于工作时的心情，良好的 shortcut setup 也能够节省下成吨的时间，问题是 setup 好了为啥还要上 unixporn 去看别人的配置呢？总归是人外有人天外有天，可惜精力有限，花上过多的时间折腾配置，不如多花点时间写写代码，学习学习；也许这就是 Linux User 的执念，既然选择了 Linux (并且折腾了 WM 很可能不是新手 Linux 用户)，那就要好好地造出属于自己的机器，也算是 Linux User 的一种浪漫吧。（当然，也是学习 C 语言的好机会，大部分 tools 都还是用 C 写的，小部分 cool tools 会用上更加有趣的语言，比如 Haskell 写的 Xmonad。）&lt;/p&gt;
&lt;p&gt;之前学着 &lt;a href=&quot;https://space.bilibili.com/13081489?from=search&amp;#x26;seid=10510039626072481997&quot;&gt;TheCW&lt;/a&gt; 和 &lt;a href=&quot;https://www.youtube.com/channel/UC2eYFnH61tmytImy1mTYvhA&quot;&gt;Luke Smith&lt;/a&gt; 入了 Arch 的坑，一直用着 dwm 以及配套工具，预计马上要换电脑了，特意再来折腾折腾 Arch，重新整理一下自己的配置和思绪。因为用到的工具实在是太多了，vim 等一些东西又自成体系，大概会写上好几篇文章。同时我也想设计设计能够多活几年的文章，GitHub 上还能够找到 78 年前的 WM 配置（对于快速发展的软件业来说已经算是不短的时间了），但是我有更大的野心，希望能够抽象出一些共通的东西，适用于无论哪个时代的 Linux Windows 配置，即使那个时候的操作系统已经不是 Linux。&lt;/p&gt;
&lt;h3&gt;WM&lt;/h3&gt;
&lt;p&gt;如果你使用的是 Microsoft Windows 的话（2021 年是 Windows 10，或者更早的版本），你可能有着还算不错的电脑使用体验，很多人留在了 Windows 7 就是因为他长得好看；抑或是你使用的还是 Ubuntu、CentOS 自带的桌面环境(GNOME)，如果是这样的话，你就错过了 Linux 桌面的无限风景。Windows Manager TODO: WM history&lt;/p&gt;
&lt;p&gt;为什么要使用 WM？一个实际的考虑是它会占用更少的资源，对于一个职业开发者来说这是非常关键的，能少用一点内存或者 CPU 都能够帮助到自己开发；更重要的是 WM 的灵活性允许你自由地配置它的长相，自由地设置自己的热键来达到最适合自己、尽可能高效的工作体验（当然一开始的话还是先抄作业比较好）。&lt;/p&gt;
&lt;p&gt;必要的功能：对于一个 WM 来说，必要的功能是什么？细数一下：切换工作台（或者说桌面，对应一般桌面环境的虚拟桌面）、同时显示所有的窗口。在每一个工作台上时：打开一个新的窗口（通常是终端模拟器，比如 st、或者浏览器）、关闭一个新的窗口、调整窗口的大小、调整窗口排布方式（全屏、块状、浮动、等等）、&lt;/p&gt;
&lt;p&gt;浮动时候：移动、调整窗口大小&lt;/p&gt;
&lt;p&gt;不同的 WM 又有自己的设计哲学，比如 dwm 基于栈实现窗口管理，bspwm 基于二叉树实现窗口管理&lt;/p&gt;
&lt;p&gt;dwm 的问题：更改起来太麻烦了，每次都需要重新编译安装，虽然 dwm 是 suckless 官方出品的轻量级；但是在热插拔上面实在是太难受了；相应的，著名的 st 也有这个问题，不过相对好些，毕竟终端模拟器重启起来还算比较容易，整个 WM 关掉就必须同时关掉其它重要的窗口（比如浏览器），最近 rust 写的 alacritty 在热插拔上做得就比 st 好得多。 &lt;/p&gt;
&lt;p&gt;可移植性: sxhkd。sxhkd 提供了通用的热键接入接口，从此你不需要再忙于各个 WM 自己的热键，而是可以专心使用一套热键对付未来可能的所有变化。只要人类与机器的交互方式没有发生革命性的改变，以键盘为媒介的热键就不会消失，而即使是真的产生了革命性的交互方式，热键背后的意义依旧会以新的方式保留下来—— DRY，Don&apos;t Repeat Yourself，任何重复性的工作都值得你去为其提供快速既定的解决方案，这样的思想在计算机科学里面比比皆是，从算法到软件工程。&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;/th&gt;
&lt;th&gt;&lt;/th&gt;
&lt;th&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;windows manager&lt;/td&gt;
&lt;td&gt;bspwm/dwm/xmonad/...&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;application launcher&lt;/td&gt;
&lt;td&gt;rofi/dmenu&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;shell&lt;/td&gt;
&lt;td&gt;zsh/nushell/bash&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;terminal emulator&lt;/td&gt;
&lt;td&gt;st/alacritty/urxvt/...&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;hotkey daemon&lt;/td&gt;
&lt;td&gt;sxhkd&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;notification daemon&lt;/td&gt;
&lt;td&gt;dunst&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;editor&lt;/td&gt;
&lt;td&gt;neovim/vim&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;status bar&lt;/td&gt;
&lt;td&gt;polybar&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;browser&lt;/td&gt;
&lt;td&gt;chrome/brave/firefox/...&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;pdf reader&lt;/td&gt;
&lt;td&gt;zathura/evince/...&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;screen locker&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;file explorer&lt;/td&gt;
&lt;td&gt;lf/ranger&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;CJK 编辑器&lt;/td&gt;
&lt;td&gt;ibus&lt;/td&gt;
&lt;td&gt;ibus 著名的开源编辑器，非常好用，扩展性很强，Android 版本也有&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;/th&gt;
&lt;th&gt;&lt;/th&gt;
&lt;th&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;display manager&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;redshift&lt;/td&gt;
&lt;td&gt;保护眼睛&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;compositor&lt;/td&gt;
&lt;td&gt;compton/picom&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;network manager&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;wallpaper&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;ueberzug&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3&gt;Polybar&lt;/h3&gt;
&lt;p&gt;对于一个 WM，其灵魂之一就是一个好的 bar 了，来自普通桌面环境的你可能&lt;/p&gt;
&lt;h3&gt;Reference&lt;/h3&gt;</content:encoded></item><item><title><![CDATA[Arch Linux 安装 mysql]]></title><description><![CDATA[之前跑的都是 postgresql，现在上了 mysql，本来以为 pacman 一下就好了，结果报错了。Debug 过程主要就是  然后不停看报错信息搜寻解决方案。]]></description><link>https://ahacad.cool/Developing/install-mysql-on-arch-linux/</link><guid isPermaLink="false">https://ahacad.cool/Developing/install-mysql-on-arch-linux/</guid><pubDate>Fri, 05 Mar 2021 16:35:43 GMT</pubDate><content:encoded>&lt;p&gt;之前跑的都是 postgresql，现在上了 mysql，本来以为 pacman 一下就好了，结果报错了。Debug 过程主要就是 &lt;code class=&quot;language-text&quot;&gt;systemctl status mysql&lt;/code&gt; 然后不停看报错信息搜寻解决方案。 &lt;/p&gt;</content:encoded></item><item><title><![CDATA[学习 JavaScript 历程]]></title><description><![CDATA[不同语言之间的差别很大！ 函数是一等公民 JavaScript 三大支柱 Ref: 28 个JavaScript编程黑科技，装逼指南，高逼格代码，让你惊叹不已 怎么样才算是精通 JavaScript？ 如何衡量一个人的 JavaScript 水平？]]></description><link>https://ahacad.cool/Frontend/learn-JavaScript/</link><guid isPermaLink="false">https://ahacad.cool/Frontend/learn-JavaScript/</guid><pubDate>Thu, 04 Mar 2021 20:49:53 GMT</pubDate><content:encoded>&lt;p&gt;不同语言之间的差别很大！&lt;/p&gt;
&lt;p&gt;函数是一等公民&lt;/p&gt;
&lt;p&gt;JavaScript 三大支柱&lt;/p&gt;
&lt;p&gt;Ref:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://zhuanlan.zhihu.com/p/262533240&quot;&gt;28 个JavaScript编程黑科技，装逼指南，高逼格代码，让你惊叹不已&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.zhihu.com/question/19657253/answer/12548454&quot;&gt;怎么样才算是精通 JavaScript？&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.zhihu.com/question/22855484/answer/657320514&quot;&gt;如何衡量一个人的 JavaScript 水平？&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content:encoded></item><item><title><![CDATA[PWA 指南]]></title><link>https://ahacad.cool/Frontend/PWA-guide/</link><guid isPermaLink="false">https://ahacad.cool/Frontend/PWA-guide/</guid><pubDate>Tue, 23 Feb 2021 19:21:07 GMT</pubDate><content:encoded></content:encoded></item><item><title><![CDATA[乐而为人]]></title><description><![CDATA[…]]></description><link>https://ahacad.cool/thoughts/just-be-human/</link><guid isPermaLink="false">https://ahacad.cool/thoughts/just-be-human/</guid><pubDate>Sun, 21 Feb 2021 20:52:29 GMT</pubDate><content:encoded>&lt;p&gt;曾经有幻想，一瞬间把知识灌进脑子，或者成为超人，征服世界；奈何现实凄凉，往往是花上几个小时希望如此魔幻地变化，其实只是干坐着。当然，那个时候还不知道什么叫文艺复兴人，只是单纯且朦胧的期望。&lt;/p&gt;
&lt;p&gt;最终我还是决定好好做人，与其想象自己一瞬变强，不如踏踏实实做事情来的靠谱，能不能成为文艺复兴人不知道，但是一点一点做才真正靠谱。&lt;/p&gt;
&lt;p&gt;从以前草草阅过几百页书，到现在一点一点写笔记；从 2 倍速播放到 1.25 + Google，最终还是和自己和解了，乐而为人，一点点走。&lt;/p&gt;
&lt;p&gt;[结对学习]&lt;/p&gt;
&lt;p&gt;[兴趣与信息]&lt;/p&gt;</content:encoded></item><item><title><![CDATA[No title]]></title><description><![CDATA[css: counter]]></description><link>https://ahacad.cool/Frontend/TODO/</link><guid isPermaLink="false">https://ahacad.cool/Frontend/TODO/</guid><pubDate>Sun, 21 Feb 2021 10:39:48 GMT</pubDate><content:encoded>&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;css:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;counter&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;</content:encoded></item><item><title><![CDATA[命令行下的工具]]></title><description><![CDATA[这篇文章来写一些命令行下自己使用的工具，一个有意思的点是各种上古神器逐渐用新语言重写，其中 rust 写的工具相当顺手好用、且执行效率极高。]]></description><link>https://ahacad.cool/linux/terminal-tools/</link><guid isPermaLink="false">https://ahacad.cool/linux/terminal-tools/</guid><pubDate>Thu, 18 Feb 2021 22:08:36 GMT</pubDate><content:encoded>&lt;p&gt;这篇文章来写一些命令行下自己使用的工具，一个有意思的点是各种上古神器逐渐用新语言重写，其中 rust 写的工具相当顺手好用、且执行效率极高。&lt;/p&gt;</content:encoded></item><item><title><![CDATA[整理一下用到的 vim 插件]]></title><description><![CDATA[现代版的 neovim 支持了 coc 驱动的 LSP 从而有了浮窗提示，并且可以使用 TypeScript 编写插件（实际上啥语言都可以，但是 TS 正好和 VS Code 兼容），把 neovim 打造成 IDE 绝对是可行的（并且我正在这么做着）。有人会说 IDE…]]></description><link>https://ahacad.cool/linux/vim-plugins/</link><guid isPermaLink="false">https://ahacad.cool/linux/vim-plugins/</guid><pubDate>Thu, 18 Feb 2021 21:17:37 GMT</pubDate><content:encoded>&lt;p&gt;现代版的 neovim 支持了 coc 驱动的 LSP 从而有了浮窗提示，并且可以使用 TypeScript 编写插件（实际上啥语言都可以，但是 TS 正好和 VS Code 兼容），把 neovim 打造成 IDE 绝对是可行的（并且我正在这么做着）。有人会说 IDE 就交给 IDE，折腾这干啥，然而我想说，即使 VSCode 支持 vim 模式，实际体验还是和 vim 完全比不了的，后者使用的时候真的可以做到双手不离开键盘；而为了尽可能保留原生 vim 体验，我的普通 vim 只配备了一些基本的插件，neovim 在配置后则像是重型战车，配置出来足以满足开发需求。&lt;/p&gt;
&lt;p&gt;这篇文章整理一下我用到的插件，梳理一下自己的思路，去掉一些冗余的，深入挖掘一些感兴趣的，分享给各位朋友。&lt;/p&gt;
&lt;p&gt;后来我逐渐发现了 VSCode 的优点&lt;/p&gt;
&lt;h3&gt;&lt;/h3&gt;</content:encoded></item><item><title><![CDATA[让信息来找你]]></title><link>https://ahacad.cool/thoughts/let-news-find-you/</link><guid isPermaLink="false">https://ahacad.cool/thoughts/let-news-find-you/</guid><pubDate>Thu, 18 Feb 2021 18:16:13 GMT</pubDate><content:encoded></content:encoded></item><item><title><![CDATA[前端书籍总结]]></title><description><![CDATA[Secrets of the JavaScript Ninja: 四百页中等书籍，要讲的基本都讲得相当透彻，配图很精彩 目前看来最值得读的是 You Don't Know JS, Secrets of the JavaScript Ninja 和 Professional…]]></description><link>https://ahacad.cool/Developing/frontend-books/</link><guid isPermaLink="false">https://ahacad.cool/Developing/frontend-books/</guid><pubDate>Thu, 18 Feb 2021 14:52:53 GMT</pubDate><content:encoded>&lt;ul&gt;
&lt;li&gt;Secrets of the JavaScript Ninja: 四百页中等书籍，要讲的基本都讲得相当透彻，配图很精彩&lt;/li&gt;
&lt;li&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;目前看来最值得读的是 You Don&apos;t Know JS, Secrets of the JavaScript Ninja 和 Professional JavaScript for Web Developers.&lt;/p&gt;</content:encoded></item><item><title><![CDATA[达夫设备 (Duff Device)]]></title><description><![CDATA[奇技淫巧]]></description><link>https://ahacad.cool/Developing/Duff-device/</link><guid isPermaLink="false">https://ahacad.cool/Developing/Duff-device/</guid><pubDate>Wed, 17 Feb 2021 21:30:02 GMT</pubDate><content:encoded>&lt;p&gt;奇技淫巧&lt;/p&gt;</content:encoded></item><item><title><![CDATA[前端面试复习]]></title><description><![CDATA[最近准备面试，开始认真复习（学习）前端，越发发现其实基础才是最重要的，一些经典的书籍（比如小眼镜）一定要好好读掉，之后再去看文章或者文档就会有一股通透感。这一点在读 Vue 文档的时候深有体会，一开始当然也能读懂、模仿，但是深层次的连接没有很难融会贯通，但是好好学了 JS…]]></description><link>https://ahacad.cool/Frontend/frontend-interview/</link><guid isPermaLink="false">https://ahacad.cool/Frontend/frontend-interview/</guid><pubDate>Tue, 16 Feb 2021 11:53:36 GMT</pubDate><content:encoded>&lt;p&gt;最近准备面试，开始认真复习（学习）前端，越发发现其实基础才是最重要的，一些经典的书籍（比如小眼镜）一定要好好读掉，之后再去看文章或者文档就会有一股通透感。这一点在读 Vue 文档的时候深有体会，一开始当然也能读懂、模仿，但是深层次的连接没有很难融会贯通，但是好好学了 JS 后，文档里写出来的没写出来的都可以看出来，感触比起之前强了太多。&lt;/p&gt;
&lt;p&gt;过程中也读了不少文章，整理在下面，还是强调，首先把一些经典书籍读掉、建立好知识框架了读起文章了效果会好很多！&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://www.cnblogs.com/mengff/p/9656486.html&quot;&gt;ES6 箭头函数总结&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content:encoded></item><item><title><![CDATA[关于阅读的一些想法]]></title><description><![CDATA[总体阅读观： 习惯于阅读几百本书、几万篇文章来真正弄懂一件事 阅读时： 想象自己是作者来读书 做好词法分析与构建逻辑树]]></description><link>https://ahacad.cool/thoughts/discourses-on-reading/</link><guid isPermaLink="false">https://ahacad.cool/thoughts/discourses-on-reading/</guid><pubDate>Fri, 05 Feb 2021 22:29:20 GMT</pubDate><content:encoded>&lt;p&gt;总体阅读观：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;习惯于阅读几百本书、几万篇文章来真正弄懂一件事&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;阅读时：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;想象自己是作者来读书&lt;/li&gt;
&lt;li&gt;做好词法分析与构建逻辑树&lt;/li&gt;
&lt;/ul&gt;</content:encoded></item><item><title><![CDATA[掌握了前端知识你可以做什么]]></title><description><![CDATA[网站 数据可视化 动态与网页设计]]></description><link>https://ahacad.cool/Frontend/what-you-can-do-with-frontend/</link><guid isPermaLink="false">https://ahacad.cool/Frontend/what-you-can-do-with-frontend/</guid><pubDate>Thu, 04 Feb 2021 21:14:37 GMT</pubDate><content:encoded>&lt;ul&gt;
&lt;li&gt;网站&lt;/li&gt;
&lt;li&gt;&lt;/li&gt;
&lt;li&gt;数据可视化&lt;/li&gt;
&lt;li&gt;动态与网页设计&lt;/li&gt;
&lt;li&gt;&lt;/li&gt;
&lt;/ul&gt;</content:encoded></item><item><title><![CDATA[Use GitHub to create the learning loop]]></title><description><![CDATA[Learn => arrange the learning resources and publish => find interesting problems of the knowledge => publish or blogging on the problems…]]></description><link>https://ahacad.cool/creating/github-for-learning/</link><guid isPermaLink="false">https://ahacad.cool/creating/github-for-learning/</guid><pubDate>Wed, 27 Jan 2021 17:03:14 GMT</pubDate><content:encoded>&lt;p&gt;Learn =&gt; arrange the learning resources and publish =&gt; find interesting problems of the knowledge =&gt; publish or blogging on the problems =&gt; learn&lt;/p&gt;</content:encoded></item><item><title><![CDATA[第一次面试]]></title><description><![CDATA[今天完成了第一次工作面试，字节跳动前端一面，面之前我就心神不宁。。。一开始还好，问到闭包我脑子就开始懵了，然后后面就一路懵懵的，最后一道算法题求数组中第 k 大的数很经典的题目，思路对了然而没有 debug 出来，面完了我也基本忘了问了啥。。。 好吧这篇 post…]]></description><link>https://ahacad.cool/jiriguara/first-interview/</link><guid isPermaLink="false">https://ahacad.cool/jiriguara/first-interview/</guid><pubDate>Wed, 27 Jan 2021 16:47:30 GMT</pubDate><content:encoded>&lt;p&gt;今天完成了第一次工作面试，字节跳动前端一面，面之前我就心神不宁。。。一开始还好，问到闭包我脑子就开始懵了，然后后面就一路懵懵的，最后一道算法题求数组中第 k 大的数很经典的题目，思路对了然而没有 debug 出来，面完了我也基本忘了问了啥。。。&lt;/p&gt;
&lt;p&gt;好吧这篇 post 就是发泄一下，感觉自己还是很多不足，面试问题集中在 JS 和 HTTP，还是得顽张れ！&lt;/p&gt;</content:encoded></item><item><title><![CDATA[Pomodoro has changed my life]]></title><description><![CDATA[Pomodoro has literally changed my life. No overrating, it is one of my primary working models and is simply fascinating. I would like to…]]></description><link>https://ahacad.cool/thoughts/pomodoro-has-changed-my-life/</link><guid isPermaLink="false">https://ahacad.cool/thoughts/pomodoro-has-changed-my-life/</guid><pubDate>Tue, 26 Jan 2021 23:03:22 GMT</pubDate><content:encoded>&lt;p&gt;Pomodoro has literally changed my life. No overrating, it is one of my primary working models and is simply fascinating. I would like to share some thoughts on using pomodoro in this post, both the hows and the whys.&lt;/p&gt;
&lt;p&gt;The hows of using pomodoro is actually very easy. Take 25 minutes, focus on your work, set a clock or something to remind yourself, then 5 minutes rest, cycling. Saying this s &lt;/p&gt;
&lt;p&gt;the philosophy behind pomodoro: &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;to thyself be true&lt;/li&gt;
&lt;li&gt;do it section by section, progressively&lt;/li&gt;
&lt;li&gt;having rest is the key to working&lt;/li&gt;
&lt;li&gt;every minute matters&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;To thyself be true. Use pomodoro means admitting that what you can do in an given amount of time is limited.&lt;/p&gt;</content:encoded></item><item><title><![CDATA[帕金森定律]]></title><description><![CDATA[帕金森定律：做一件事给你多少时间你就会用掉多少时间。 首先声明，这个定律可能并不叫帕金森定律，我记得是哪里听来的，但是搜索无果；无妨，且称其为帕金森定律，就当作俺自己命了个名，因为这个定律对我的工作流影响深远。 举个例子，写一篇论文，500…]]></description><link>https://ahacad.cool/thoughts/the-pakinson-law/</link><guid isPermaLink="false">https://ahacad.cool/thoughts/the-pakinson-law/</guid><pubDate>Mon, 25 Jan 2021 23:25:14 GMT</pubDate><content:encoded>&lt;blockquote&gt;
&lt;p&gt;帕金森定律：做一件事给你多少时间你就会用掉多少时间。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;首先声明，这个定律可能并不叫帕金森定律，我记得是哪里听来的，但是搜索无果；无妨，且称其为帕金森定律，就当作俺自己命了个名，因为这个定律对我的工作流影响深远。&lt;/p&gt;
&lt;p&gt;举个例子，写一篇论文，5000 字，给你一天你可以写完，三天也可以写完，一周也可以，一个月也可以，然而你总是会惊奇地发现：往往是在 ddl 前一晚写完论文。这就是帕金森定律的体现，给你多少时间，你就会用掉多少时间，当然你可以反驳说一个月打磨会写出更好的论文，我并不否认，但是如果计算投入产出比的话恐怕是一两天的期限写出来的文章反而更好，因为&lt;strong&gt;多出来的时间往往被浪费在了并不重要的事情上&lt;/strong&gt;：写论文时应该喝什么咖啡？是不是有人回复我微信了？今晚去哪里下馆子？然而只有一天的时候，你会非常专注，这些事情都不重要，重要的只有一个：写出论文，而且质量还得不错（毕竟有人要评）。&lt;/p&gt;
&lt;p&gt;我一开始意识到这个定律——当然那时候还不知道它的名字——是在高中，那时每天早上6点50要出操，然后我又惊奇地发现：无论是五点半起看会书安心吃早餐还是六点四十起叼个面包就跑，我总是能在6点50左右到达操场，当时我也给这个现象起了一个比较魔幻的名字，叫时间xx原理。。。&lt;/p&gt;
&lt;p&gt;这里的启示是什么？其实我们工作中相当部分的时间浪费在了不重要的事情上、对产出无正面效益的事情上，我并不是反对你悠哉悠哉做事、相反我希望你能“专注”地悠哉悠哉，因为这时候是发挥创造力的时间，要不计成本地投入时间才可能有回报；但是实际工作中，尤其是职业的初期阶段、对领域知识掌握不深的时候，更多的时间应该是心无旁骛地学习和产出，设计你的工作环境与工作流，抓住对产出真正重要的事情，心中冒出杂事的时候，对自己说：it doesn&apos;t matter，记录到纸条上，扔开，完成手头的工作（比如使用番茄钟）再去处理。&lt;/p&gt;</content:encoded></item><item><title><![CDATA[“黑客”帝国主义]]></title><description><![CDATA[经济学上有个说法是经济学帝国主义，讲的是经济学家用经济学方法分析所有社会学相关学科甚至更多，类似的，现在我也要自己创一个“黑客”帝国主义，讲讲真正的黑客如何渗透到各种各样的领域里面去。]]></description><link>https://ahacad.cool/thoughts/hacker-imperialism/</link><guid isPermaLink="false">https://ahacad.cool/thoughts/hacker-imperialism/</guid><pubDate>Sat, 23 Jan 2021 16:44:00 GMT</pubDate><content:encoded>&lt;p&gt;经济学上有个说法是经济学帝国主义，讲的是经济学家用经济学方法分析所有社会学相关学科甚至更多，类似的，现在我也要自己创一个“黑客”帝国主义，讲讲真正的黑客如何渗透到各种各样的领域里面去。&lt;/p&gt;</content:encoded></item><item><title><![CDATA[关于人上人的思考]]></title><link>https://ahacad.cool/thoughts-on-upper-class-in-college/</link><guid isPermaLink="false">https://ahacad.cool/thoughts-on-upper-class-in-college/</guid><pubDate>Tue, 19 Jan 2021 21:43:00 GMT</pubDate><content:encoded></content:encoded></item><item><title><![CDATA[我的信息源]]></title><description><![CDATA[…]]></description><link>https://ahacad.cool/thoughts/my-information-sources/</link><guid isPermaLink="false">https://ahacad.cool/thoughts/my-information-sources/</guid><pubDate>Mon, 18 Jan 2021 21:43:00 GMT</pubDate><content:encoded>&lt;p&gt;面对纷繁复杂的现代社会，好的信息源可以说相当程度决定了你的精神状态，久而久之就是你所处的社会状态，这篇文章谈谈我的信息源，既有比较抽象的想法，也有非常具体的推荐。&lt;/p&gt;
&lt;p&gt;对于我来说，第一重要的信息源是朋友的推荐，著名的五个人决定收入的说法你一定不陌生，高质量的朋友往往更容易向你推荐高质量的信息，而且这些是真正契合你当时状态的信息。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://jikeyuedu.cn/&quot;&gt;极客阅读&lt;/a&gt;: information mesh，收集了非常多站点&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://segmentfault.com/&quot;&gt;segmentfault&lt;/a&gt;: 思否&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://juejin.cn/post/6918881497264947207&quot;&gt;掘金&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;各种微信公众号：我个人其实并不喜欢微信公众号的体验，但是上面确实已经有了非常多高质量的信息源。一些头部公众号还会自己运用社群（比如微信群的模式），可以尝试加入。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.cnblogs.com/&quot;&gt;博客园&lt;/a&gt;: 博客园给予写作者很大的自主权，上面的文章质量相当高，而且发文章时可以自己选择是否发在首页，可以说倒逼了写作者的写作质量。&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://zhihu.com&quot;&gt;知乎&lt;/a&gt;: 虽然说知乎越来越娱乐化，但是上面还是留存了不少有价值的回答的，我的建议是搜索一些重要的问答，关注一些大牛，别看热榜。&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://douban.com&quot;&gt;豆瓣&lt;/a&gt;: 相比较之下豆瓣会好很多，上面有非常多关于计算机书籍的豆列和文章，豆瓣帐号本身也值得经营（当然小心别被封号了，豆瓣封了号可是啥都留不下来的。。。）。&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com&quot;&gt;GitHub&lt;/a&gt;: 这个你没用过都不好意思说自己是 developer，多多关注 GitHub trendy 会有不少收获，另外可以主动关注一些优质的开发者来获取他们的实时动态（commit, prs）。&lt;/li&gt;
&lt;li&gt;&lt;/li&gt;
&lt;/ul&gt;</content:encoded></item><item><title><![CDATA[Winter constest - 2]]></title><description><![CDATA[difficulty: G. A. Acing the contest E. End of the year bonus H. How to work less to pass a programming course in Planet E-13 K. K…]]></description><link>https://ahacad.cool/ACM/Winter contest-1/</link><guid isPermaLink="false">https://ahacad.cool/ACM/Winter contest-1/</guid><pubDate>Mon, 18 Jan 2021 17:09:00 GMT</pubDate><content:encoded>&lt;p&gt;difficulty:&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;tier 1: CDGIL
tier 2: AEHKM
tier 3: JN
tier 4: BF&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;G.&lt;/h3&gt;
&lt;h3&gt;A. Acing the contest&lt;/h3&gt;
&lt;h3&gt;E. End of the year bonus&lt;/h3&gt;
&lt;h3&gt;H. How to work less to pass a programming course in Planet E-13&lt;/h3&gt;
&lt;h3&gt;K. K contestants&lt;/h3&gt;
&lt;h3&gt;M. Mathematics society problem&lt;/h3&gt;
&lt;h3&gt;J. Jaime&apos;s greedy delivery&lt;/h3&gt;</content:encoded></item><item><title><![CDATA[Winter Contest 2]]></title><description><![CDATA[difficulty: Easy I. Nobody knows better than me 排序，贪心 A. IQ difference 排序，贪心 D. Life game 模拟 Medium G. Nim plus L. Long long wanna buy]]></description><link>https://ahacad.cool/ACM/Winter contest-2/</link><guid isPermaLink="false">https://ahacad.cool/ACM/Winter contest-2/</guid><pubDate>Mon, 18 Jan 2021 17:09:00 GMT</pubDate><content:encoded>&lt;p&gt;difficulty:&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;tier 1: IAD
tier 2: GLMJ
tier 3: CHK
tier 4: EBF&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;Easy&lt;/h2&gt;
&lt;h3&gt;I. Nobody knows better than me&lt;/h3&gt;
&lt;p&gt;排序，贪心&lt;/p&gt;
&lt;h3&gt;A. IQ difference&lt;/h3&gt;
&lt;p&gt;排序，贪心&lt;/p&gt;
&lt;h3&gt;D. Life game&lt;/h3&gt;
&lt;p&gt;模拟&lt;/p&gt;
&lt;h2&gt;Medium&lt;/h2&gt;
&lt;h3&gt;G. Nim plus&lt;/h3&gt;
&lt;h3&gt;L. Long long wanna buy&lt;/h3&gt;</content:encoded></item><item><title><![CDATA[Winter Contest 2]]></title><description><![CDATA[difficulty:]]></description><link>https://ahacad.cool/ACM/Winter contest-3/</link><guid isPermaLink="false">https://ahacad.cool/ACM/Winter contest-3/</guid><pubDate>Mon, 18 Jan 2021 17:09:00 GMT</pubDate><content:encoded>&lt;p&gt;difficulty:&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;tier 1: CDHJ
tier 2: GIKA&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</content:encoded></item><item><title><![CDATA[Why Arch?]]></title><description><![CDATA[One of my friends said he wants to go back to Windows, after using Arch Linux for a fairly long amount of time. This makes me wonder: why…]]></description><link>https://ahacad.cool/linux/why-arch/</link><guid isPermaLink="false">https://ahacad.cool/linux/why-arch/</guid><pubDate>Thu, 07 Jan 2021 16:35:00 GMT</pubDate><content:encoded>&lt;p&gt;One of my friends said he wants to go back to Windows, after using Arch Linux for a fairly long amount of time. This makes me wonder: why should I use Arch Linux? Is it just for showing off? Or maybe it means something more than that?&lt;/p&gt;
&lt;p&gt;I started using arch, immitaing some programmers on video websites like Youtube and Bilibili. Instantly I know that I want this OS, because I had always had an urge to make my computer customized, by me.&lt;/p&gt;</content:encoded></item><item><title><![CDATA[The Google test card and learning]]></title><description><![CDATA[0 – 对于相关的技术领域还不熟悉
1 – 可以读懂这个领域的基础知识
2 – 可以实现一些小的改动，清楚基本的原理，并能够在简单的指导下自己找到更多的细节。 3 – 基本精通这个技术领域，完全不需要别人的帮助…]]></description><link>https://ahacad.cool/the-google-test-card-and-learning/</link><guid isPermaLink="false">https://ahacad.cool/the-google-test-card-and-learning/</guid><pubDate>Fri, 04 Dec 2020 20:19:56 GMT</pubDate><content:encoded>&lt;blockquote&gt;
&lt;p&gt;0 – 对于相关的技术领域还不熟悉
1 – 可以读懂这个领域的基础知识
2 – 可以实现一些小的改动，清楚基本的原理，并能够在简单的指导下自己找到更多的细节。&lt;/p&gt;
&lt;p&gt;3 – 基本精通这个技术领域，完全不需要别人的帮助
4 – 对这个技术领域非常的熟悉和舒适，可以应对和完成所有的日常工作。&lt;/p&gt;
&lt;p&gt;对于软件领域 – 有能力开发中等规模的程序，能够熟练和掌握并使用所有的语言特性，而不是需要翻书，并且能够找到所有的冷知识。
对于系统领域 – 掌握网络和系统管理的很多基础知识，并能够掌握一些内核知识以运维一个小型的网络系统，包括恢复、调试和能解决一些不常见的故障。
5 – 对于该技术领域有非常底层的了解和深入的技能。&lt;/p&gt;
&lt;p&gt;6 – 能够从零开发大规模的程序和系统，掌握底层和内在原理，能够设计和部署大规模的分布式系统架构
7 – 理解并能利用高级技术，以及相关的内在原理，并可以从根本上自动化大量的系统管理和运维工作。
8 – 对于一些边角和晦涩的技术、协议和系统工作原理有很深入的理解和经验。能够设计，部署并负责非常关键以及规模很大的基础设施，并能够构建相应的自动化设施&lt;/p&gt;
&lt;p&gt;9 – 能够在该技术领域出一本经典的书。并和标准委员会的人一起工作制定相关的技术标准和方法。
10 – 在该领域写过一本书，被业内尊为专家，并是该技术的发明人。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;SRE需要自评如下这些技术或技能。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;– TCP/IP Networking (OSI stack, DNS etc)
– Unix/Linux internals
– Unix/Linux Systems administration
– Algorithms and Data Structures
– C/C++
– Python
– Java
– Perl
– Go
– Shell Scripting (sh, Bash, ksh, csh)
– SQL and/or Database Admin
– Scripting language of your choice (not already mentioned) &lt;strong&gt;&lt;strong&gt;&lt;strong&gt;_&lt;/strong&gt;&lt;/strong&gt;&lt;/strong&gt;
– People Management
– Project Management&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;看到了谷歌这个十个等级的自我评测卡，感触颇深。之前自己犯了不少错误，也做了一些正确的事情，但是基本都可以在这张卡里面得到概括。&lt;/p&gt;
&lt;p&gt;我是一个兴趣广泛的人，真的非常广泛，我仔细学过的专业，从物理到哲学到文学到音乐到绘画到管理到医学到工程，这很好、也很糟糕。糟糕的是，我的精力太过分散，大多数方面可能甚至都不了 2 级，需要相对较多投入的 4 级更是别提。我想说，一个正常的大学教育，把你带到 2 就不错了，大多数水课可能连 1 都没有（当然这是因为许多老师自己不过 34 的水平），但这是非常糟糕的，如果你真心喜欢并且愿意钻研一项事情、指导你的人却只给你提供 34 的资源、可能甚至有反作用。&lt;/p&gt;
&lt;p&gt;自学是&lt;/p&gt;
&lt;p&gt;对于许多事情，向 34 或更高直接学习可以帮助你快速达到 2 的水平，超过周围许多人，这样的小技能多了可以形成巨大的累加优势，不仅开阔了视野，而且将来有机会深入学习的时候更可能在竞争中获得资源，继续走向更高的水平（我称其为造 api）。&lt;/p&gt;
&lt;p&gt;但是如果你一个 4 都没有的话，将是非常恐怖的事情，如果没有铁饭碗的话（在未来社会几乎不可能有这种东西）甚至会难以生存。好高骛远的人可能就会这样。&lt;/p&gt;
&lt;p&gt;所以建议是，对于你在乎的许多事情，做到 4，对于几个要专精的东西，不断做下去越高越好，同时向懂行者学习、在许多方面快速达到 23。&lt;/p&gt;</content:encoded></item><item><title><![CDATA['Ghost' in the 'shell']]></title><description><![CDATA[Introduction 无论是否看过黑客帝国，你一定或多或少对“黑客”有所希冀，想象之中的他们是戴着黑兜帽和 V…]]></description><link>https://ahacad.cool/ghost-in-the-shell/</link><guid isPermaLink="false">https://ahacad.cool/ghost-in-the-shell/</guid><pubDate>Wed, 25 Nov 2020 19:41:36 GMT</pubDate><content:encoded>&lt;h2&gt;Introduction&lt;/h2&gt;
&lt;p&gt;无论是否看过黑客帝国，你一定或多或少对“黑客”有所希冀，想象之中的他们是戴着黑兜帽和 V 字面具，坐在电脑前，疯狂地敲击键盘，过了一会整个城市的电力就瘫痪了……当然，如果你真的让城市的电力瘫痪了、恐怕得进局子，现实中的程序员也有不少还使用着 Windows 和鼠标，成天做着 &lt;code class=&quot;language-text&quot;&gt;Ctrl+c&lt;/code&gt;, &lt;code class=&quot;language-text&quot;&gt;Ctrl+v&lt;/code&gt; 的事情，实在与想象的场景大相径庭。&lt;/p&gt;
&lt;p&gt;本文不会教你怎么成为一个真正的“黑客”——无论是实际上被曲解的“骇客”还是长久流传的黑客精神，但是本文会让你成为一个更加有效率的电脑使用者。没错，不仅是程序员，任何人都可以从接下来介绍的 terminal tools 受益，即使你不会与工程打交道，让电脑能真正为你工作、而不是你为它工作，是一个现代人必须的能力。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;DO NOT USE WINDOWS!&lt;/strong&gt; 除非为了一些必须的软件，比如 Adobe 旗下的创意工具和一些仅提供 windows 使用的程序，你没有理由使用 Windows，这样一个不尊重你隐私、难以自定义又错漏百出的操作系统，使用 mac，或者 linux。本文介绍的大部分工具都是为 unix 系统而生的(linux &amp;#x26; macintosh 属于其派生)，虽然在 windows 上也能够使用 windows terminal 达到同样的效果，但是体验实在不尽如人意。&lt;/p&gt;
&lt;p&gt;接下来本文将基于 linux 系统，介绍终端生活全副装备，实际上俺本人就是使用这些工具，除了浏览器之外几乎已经完全抛弃了 GUI (graphical user interface，图形界面)。&lt;/p&gt;
&lt;h2&gt;The toolkit&lt;/h2&gt;
&lt;h3&gt;Must needed&lt;/h3&gt;
&lt;h4&gt;suckless st + dwm: 基础设施&lt;/h4&gt;
&lt;p&gt;要生活在终端下，首先需要终端模拟器(只要使用到了图形界面就已经不是真正的终端，但是实际操作的区别不大&lt;sup id=&quot;fnref-1&quot;&gt;&lt;a href=&quot;#fn-1&quot; class=&quot;footnote-ref&quot;&gt;1&lt;/a&gt;&lt;/sup&gt;)。如果是新手，一个 linux distro 自带的终端模拟器足以先上手使用，但是如果需要更多的定制（比如颜色、透明度等等）寻找一些其它的终端模拟器是有必要的。&lt;/p&gt;
&lt;h4&gt;tmux: 多面手&lt;/h4&gt;
&lt;h4&gt;neovim: 上古神器再生&lt;/h4&gt;
&lt;h4&gt;lf: 飞一般的文件管理器&lt;/h4&gt;
&lt;h4&gt;newsboat: 信息之源&lt;/h4&gt;
&lt;h4&gt;colemak: 私货，不要使用 qwer 键盘&lt;/h4&gt;
&lt;p&gt;&lt;a href=&quot;http://xahlee.info/kbd/keyboard_blog.html&quot;&gt;Xah keyboard blog&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;Optinal&lt;/h3&gt;
&lt;h4&gt;rg: 全局代码搜索&lt;/h4&gt;
&lt;h4&gt;khal: 日历&lt;/h4&gt;
&lt;h4&gt;musicbox: 终端网抑云:)&lt;/h4&gt;
&lt;h4&gt;mpv: 你只需要这个视频播放器&lt;/h4&gt;
&lt;h3&gt;Final thoughts&lt;/h3&gt;
&lt;p&gt;美剧《硅谷》中的主人公 Richard Hendricks 说，电脑是他能接触到的唯一靠近&lt;del&gt;档部&lt;/del&gt;并且发热的东西。有点悲哀，但是对 machine 的热爱还是体现得淋漓尽致。能够自己定制电脑（至少在软件层面），拥有某种意义上属于自己的“电脑”并与它建立联系，也算是符合一点黑客精神吧……&lt;/p&gt;
&lt;h2&gt;Footnotes&lt;/h2&gt;
&lt;div class=&quot;footnotes&quot;&gt;
&lt;hr&gt;
&lt;ol&gt;
&lt;li id=&quot;fn-1&quot;&gt;
&lt;p&gt;&lt;a href=&quot;https://unix.stackexchange.com/questions/254359/terminal-vs-terminal-emulator#:~:text=Terminal%20is%20actually%20a%20device,and%20also%20displayed%20on%20monitor.&amp;#x26;text=The%20terminal%20emulator%20program%20will,the%20shell%20using%20pseudo%2Dterminal.&quot;&gt;Stackoverflow: terminal vs teminal emulator&lt;/a&gt;&lt;/p&gt;
&lt;a href=&quot;#fnref-1&quot; class=&quot;footnote-backref&quot;&gt;↩&lt;/a&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;</content:encoded></item><item><title><![CDATA[Building My Blog]]></title><description><![CDATA[This blog is built with Gatsby, upon the template gatsby-starter-developer-diary. A lot of changes were made, however.]]></description><link>https://ahacad.cool/building-my-blog/</link><guid isPermaLink="false">https://ahacad.cool/building-my-blog/</guid><pubDate>Wed, 04 Nov 2020 09:29:00 GMT</pubDate><content:encoded>&lt;p&gt;This blog is built with Gatsby, upon the template &lt;a href=&quot;https://www.gatsbyjs.com/starters/willjw3/gatsby-starter-developer-diary&quot;&gt;gatsby-starter-developer-diary&lt;/a&gt;. A lot of changes were made, however.&lt;/p&gt;</content:encoded></item></channel></rss>