{"version":3,"sources":["webpack:///./src/pages/index.js"],"names":["ArchivePage","data","posts","allMarkdownRemark","edges","site","siteMetadata","labels","title","keywords","className","map","post","node","frontmatter","tags","key","id","to","fields","slug","date","excerpt"],"mappings":"mHAAA,sGA+GeA,UAtGK,SAAC,GAAc,IAAZC,EAAW,EAAXA,KACfC,EAAQD,EAAKE,kBAAkBC,MACtBH,EAAKI,KAAKC,aAAaC,OAkBtC,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CACEC,MAAM,UACNC,SAAU,CAAC,SAAD,2DASZ,yBAAKC,UAAU,cACb,yBAAKA,UAAU,qBACb,kBAAC,IAAD,OAEF,yBAAKA,UAAU,kBACZR,EAAMS,KAAI,SAAAC,GACIA,EAAKC,KAAKC,YAAYC,KACnC,OACE,yBAAKC,IAAKJ,EAAKC,KAAKI,GAAIP,UAAU,kBAChC,kBAAC,OAAD,CAAMQ,GAAIN,EAAKC,KAAKM,OAAOC,KAAMV,UAAU,aACzC,wBAAIA,UAAU,SAASE,EAAKC,KAAKC,YAAYN,QAE/C,2BAAOE,UAAU,qBACf,wCAAcE,EAAKC,KAAKC,YAAYO,OAEtC,uBAAGX,UAAU,iBAAiBE,EAAKC,KAAKS,SACxC,kBAAC,OAAD,CAAMJ,GAAIN,EAAKC,KAAKM,OAAOC,KAAMV,UAAU,gBACzC,2BAAOA,UAAU,uBAAjB,oBAEF,yBAAKA,UAAU","file":"component---src-pages-index-js-bef1f0add164dab8c437.js","sourcesContent":["import React from \"react\"\nimport { Link, graphql } from \"gatsby\"\nimport \"bootstrap/dist/css/bootstrap.css\"\nimport \"./index.css\"\n\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\nimport Sidebar from \"../components/sidebar/Sidebar\"\n\nconst ArchivePage = ({ data }) => {\n  const posts = data.allMarkdownRemark.edges\n  const labels = data.site.siteMetadata.labels\n\n  {\n    /*\n    const getTechTags = (tags) => {\n        const techTags = []\n        tags.forEach((tag, i) => {\n            labels.forEach((label) => {\n                if (tag === label.tag) {\n                    techTags.push(<TechTag key={i} tag={label.tag} tech={label.tech} name={label.name} size={label.size} color={label.color} />)\n                }\n            })\n        })\n        return techTags\n    }\n    */\n  }\n\n  return (\n    <Layout>\n      <SEO\n        title=\"Archive\"\n        keywords={[\n          `gatsby`,\n          `javascript`,\n          `react`,\n          `web development`,\n          `blog`,\n          `graphql`,\n        ]}\n      />\n      <div className=\"index-main\">\n        <div className=\"sidebar px-5 py-2\">\n          <Sidebar />\n        </div>\n        <div className=\"post-list-main\">\n          {posts.map(post => {\n            const tags = post.node.frontmatter.tags\n            return (\n              <div key={post.node.id} className=\"container mt-5\">\n                <Link to={post.node.fields.slug} className=\"text-dark\">\n                  <h2 className=\"title\">{post.node.frontmatter.title}</h2>\n                </Link>\n                <small className=\"d-block text-info\">\n                  <i>Posted on {post.node.frontmatter.date}</i>\n                </small>\n                <p className=\"mt-3 d-inline\">{post.node.excerpt}</p>\n                <Link to={post.node.fields.slug} className=\"text-primary\">\n                  <small className=\"d-inline-block ml-3\"> Read full post</small>\n                </Link>\n                <div className=\"d-block\">{/*getTechTags(tags)*/}</div>\n              </div>\n            )\n          })}\n        </div>\n      </div>\n    </Layout>\n  )\n}\n\nexport const pageQuery = graphql`\n  query ArchiveQuery {\n    site {\n      siteMetadata {\n        title\n        author\n        labels {\n          tag\n          tech\n          name\n          size\n          color\n        }\n      }\n    }\n    allMarkdownRemark(\n      limit: 1000\n      sort: { fields: [frontmatter___date], order: DESC }\n      filter: { frontmatter: { published: { eq: true } } }\n    ) {\n      totalCount\n      edges {\n        node {\n          excerpt(pruneLength: 200)\n          html\n          id\n          frontmatter {\n            title\n            date(formatString: \"MMMM DD, YYYY\")\n            tags\n          }\n          fields {\n            slug\n          }\n        }\n      }\n    }\n  }\n`\n\nexport default ArchivePage\n"],"sourceRoot":""}