{"version":3,"sources":["webpack:///./src/pages/index.js"],"names":["ArchivePage","data","posts","allMarkdownRemark","edges","site","siteMetadata","labels","title","keywords","className","map","post","node","frontmatter","tags","key","id","to","fields","slug","date","excerpt"],"mappings":"mHAAA,sGA2GeA,UAlGK,SAAC,GAAc,IAAZC,EAAW,EAAXA,KACbC,EAAQD,EAAKE,kBAAkBC,MACtBH,EAAKI,KAAKC,aAAaC,OAiBtC,OACI,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAKC,MAAM,UAAUC,SAAU,CAAC,SAAD,2DAC/B,yBAAKC,UAAU,cACX,yBAAKA,UAAU,qBACX,kBAAC,IAAD,OAEJ,yBAAKA,UAAU,kBACVR,EAAMS,KAAI,SAACC,GACKA,EAAKC,KAAKC,YAAYC,KACnC,OACI,yBAAKC,IAAKJ,EAAKC,KAAKI,GAAIP,UAAU,kBAC9B,kBAAC,OAAD,CACIQ,GAAIN,EAAKC,KAAKM,OAAOC,KACrBV,UAAU,aAEV,wBAAIA,UAAU,SAASE,EAAKC,KAAKC,YAAYN,QAEjD,2BAAOE,UAAU,qBAAoB,wCAAcE,EAAKC,KAAKC,YAAYO,OAEzE,uBAAGX,UAAU,iBAAiBE,EAAKC,KAAKS,SACxC,kBAAC,OAAD,CACIJ,GAAIN,EAAKC,KAAKM,OAAOC,KACrBV,UAAU,gBAEV,2BAAOA,UAAU,uBAAjB,oBAEJ,yBAAKA,UAAU","file":"component---src-pages-index-js-bef1f0add164dab8c437.js","sourcesContent":["import React from \"react\"\nimport { Link, graphql } from \"gatsby\"\nimport \"bootstrap/dist/css/bootstrap.css\"\nimport \"./index.css\"\n\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\nimport Sidebar from \"../components/sidebar/Sidebar\"\n\nconst ArchivePage = ({ data }) => {\n    const posts = data.allMarkdownRemark.edges\n    const labels = data.site.siteMetadata.labels\n\n    {/*\n    const getTechTags = (tags) => {\n        const techTags = []\n        tags.forEach((tag, i) => {\n            labels.forEach((label) => {\n                if (tag === label.tag) {\n                    techTags.push(<TechTag key={i} tag={label.tag} tech={label.tech} name={label.name} size={label.size} color={label.color} />)\n                }\n            })\n        })\n        return techTags\n    }\n    */}\n    \n\n    return (\n        <Layout>\n            <SEO title=\"Archive\" keywords={[`gatsby`, `javascript`, `react`, `web development`, `blog`, `graphql`]} />\n            <div className=\"index-main\">\n                <div className=\"sidebar px-5 py-2\">\n                    <Sidebar />\n                </div>\n                <div className=\"post-list-main\">\n                    {posts.map((post) => {\n                        const tags = post.node.frontmatter.tags\n                        return (\n                            <div key={post.node.id} className=\"container mt-5\">\n                                <Link\n                                    to={post.node.fields.slug}\n                                    className=\"text-dark\"\n                                >\n                                    <h2 className=\"title\">{post.node.frontmatter.title}</h2>\n                                </Link>\n                                <small className=\"d-block text-info\"><i>Posted on {post.node.frontmatter.date}</i>\n                                </small>\n                                <p className=\"mt-3 d-inline\">{post.node.excerpt}</p>\n                                <Link\n                                    to={post.node.fields.slug}\n                                    className=\"text-primary\"\n                                >\n                                    <small className=\"d-inline-block ml-3\"> Read full post</small>\n                                </Link>\n                                <div className=\"d-block\">\n                                  {/*getTechTags(tags)*/}\n                                </div>\n                            </div>\n                        )\n                    })}\n                </div>\n            </div>\n        </Layout>\n    )\n}\n\nexport const pageQuery = graphql`\n         query ArchiveQuery {\n           site {\n             siteMetadata {\n               title \n               author\n               labels {\n                 tag\n                 tech \n                 name \n                 size \n                 color\n               } \n             }\n           }\n           allMarkdownRemark(\n             limit: 1000\n             sort: { fields: [frontmatter___date], order: DESC }\n             filter: { frontmatter: { published: { eq: true } } }\n           ) {\n             totalCount\n             edges {\n               node {\n                 excerpt(pruneLength: 200)\n                 html\n                 id\n                 frontmatter {\n                   title\n                   date(formatString: \"MMMM DD, YYYY\")\n                   tags\n                 }\n                 fields {\n                   slug\n                 }\n               }\n             }\n           }\n         }\n       `\n\nexport default ArchivePage\n\n"],"sourceRoot":""}